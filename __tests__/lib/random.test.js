const randomNumber = require('../../lib/random.js');

test("При равных значениях, будет то же значение.", () => {
    expect(randomNumber(1, 1)).toBe(1);

    expect(randomNumber(-1, -1)).toBe(1);

    expect(randomNumber(0, 0)).toBe(0);
});

test("При значении типа *строка*, проверяется, является ли значение числом.", () => {

    expect(randomNumber(0, "100", () => 0.5)).toBe(50);
    expect(() => {
        randomNumber("1", "n", () => 0.5);
    }).toThrow();
    expect(randomNumber("50", 100, () => 0.0)).toBe(50);

});

test("Порядок аргументов не важен", () => {

    expect(randomNumber(3, 1, () => 0.5)).toBe(2);
})

test("При значении типа Infinite будет ошибка", () => {

    expect(() => {
        randomNumber

            () => 0.5)
    }).toThrow();

});

test("Бот игнорирует отрицательные значения", () => {

    expect(randomNumber(-10, -50, () => 0.5)).toBe(30);
    expect(randomNumber(-50, -10, () => 0.5)).toBe(30);
});

test("При пустом значении у функции есть резервные значения (min = 1, max = 100)", () => {

    expect(randomNumber(undefined, undefined, () => 0.5)).toBe(51);
    expect(randomNumber(1, undefined, () => 0.5)).toBe(51);
    expect(randomNumber(undefined, 100, () => 0.5)).toBe(51);

});








